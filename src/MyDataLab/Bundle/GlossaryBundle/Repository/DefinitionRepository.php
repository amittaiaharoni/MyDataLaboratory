<?php

namespace MyDataLab\Bundle\GlossaryBundle\Repository;

use Doctrine\ORM\EntityRepository;
use MyDataLab\Bundle\CoreBundle\Entity\Language;
/**
 * DefinitionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class DefinitionRepository extends EntityRepository
{
    private $definitionsPerPage;
    private $parameters;

    //array['page' => ['page_num' => int, page_amount => int],
    // 'glossary' => Glossary,
    // 'letter' => string{1},
    // 'locale' => string{2}]
    public function findAllDefinitionsByParameters(array $parameters)
    {
        $this->parameters = $this->validateParameters($parameters);

        $language = $this->getEntityManager()->getRepository('MyDataLabCoreBundle:Language')->findOneBy(array('code' => $this->parameters['locale']));
        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select('u')
            ->from('MyDataLabGlossaryBundle:Definition', 'u')
            ->andWhere(
                $qb->expr()->eq('u.language', $language->getId())
            );

        if(isset($this->parameters['glossary'])){
            $glossary = $this->getEntityManager()->getRepository('MyDataLabGlossaryBundle:Glossary')->findOneBy(array('name' => $this->parameters['glossary']));
            $query->andWhere(
                $qb->expr()->eq('u.glossary', $glossary->getId())
            );
        }
        if(isset($this->parameters['letter'])){
            $query->andWhere($qb->expr()->like('u.title', "'".$this->parameters['letter']."%'"));
        }

        $query
            ->setFirstResult(($this->parameters['page']['page_num'] - 1)*$this->parameters['page']['page_amount'])
            ->setMaxResults($this->parameters['page']['page_amount'])
            ->orderBy('u.title', 'ASC');

        $query = $query->getQuery();
        return $query->getResult();
    }

    public function countDefinitionsByParameters(array $parameters)
    {
        $language = $this->getEntityManager()->getRepository('MyDataLabCoreBundle:Language')->findOneBy(array('code' => $this->parameters['locale']));
        $qb = $this->getEntityManager()->createQueryBuilder();

        $query = $qb->select('u')
            ->from('MyDataLabGlossaryBundle:Definition', 'u')
            ->andWhere(
                $qb->expr()->eq('u.language', $language->getId())
            );

        if(isset($this->parameters['glossary'])){
            $glossary = $this->getEntityManager()->getRepository('MyDataLabGlossaryBundle:Glossary')->findOneBy(array('name' => $this->parameters['glossary']));
            $query->andWhere(
                $qb->expr()->eq('u.glossary', $glossary->getId())
            );
        }
        if(isset($this->parameters['letter'])){
            $query->andWhere($qb->expr()->like('u.title', "'".$this->parameters['letter']."%'"));
        }

        $query = $query->getQuery();
        return count($query->getResult());
    }

    private function validateParameters(array $parameters)
    {
        if(!isset($parameters['locale']))
        {
            $parameters['locale'] = 'en';
        }
        if(!isset($parameters['page']) || !isset($parameters['page']['page_num']))
        {
            $parameters['page']['page_num'] = 1;
        }

        return $parameters;
    }
}
